// Tools - Utils
// -------------------------

@import '~settings/settings-typography';

// Functions
// -------------------------

/// @function t-map-value
/// Returns a value from a nested map.
///
/// @access public
/// @param {Map | Number | String} $map-value - A map or value which is checked recursively.
/// @param {List} $map-value - The list of keys in sequential order.
/// @return {Number | String} - The value of the final key.
///
/// @example
/// t-map-value($map, (key1, key2));
@function t-map-value($map-value, $keys, $key-chain: '', $base-map: null) {

	@if (type-of($map-value) != map or length($keys) == 0) {

		@if ($map-value == null) {
			@error 't-map-value was unable to resolve #{$key-chain} from #{$base-map}';
		}

		@return $map-value;
	}

	$current-key: nth($keys, 1);
	$remaining-keys: t-slice($keys, 2);

	@if ($key-chain != '') {
		$key-chain: $key-chain + '.' + $current-key;
	}
	@else {
		$key-chain: $current-key;
	}

	@if ($base-map == null) {
		$base-map: $map-value;
	}

	@return t-map-value(map-get($map-value, $current-key), $remaining-keys, $key-chain, $base-map);
}

/// @function t-slice
/// Returns a new list partial from a given list.
///
/// @access public
/// @param {List} $list - The target list from which to derive a partial list.
/// @param {Number} $start - The start index of the slice operation.
/// @return {Number} $end - The end index of the slice operation (Optional, defaults to list length).
///
/// @example
/// t-slice($list, 1, 2);
@function t-slice($list, $start: 1, $end: length($list)) {
	$result: ();

	@if $start > $end or $start < 1 or $end < 1 or $start > length($list) or $end > length($list) {
		@return $result;
	}
	@else {

		@for $i from $start through $end {
			$result: append($result, nth($list, $i));
		}
	}

	@return $result;
}