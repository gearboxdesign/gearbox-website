@import '~settings/settings-transitions';
@import '~tools/tools-colours';
@import '~tools/tools-layout';
@import '~tools/tools-media';
@import '~tools/tools-utils';

/* Component - Header
------------------------- */

// TODO: Remove magic numbers.
$base-selector: '.c-header';
$docked-selector: '.is-docked';
$scrolled-selector: '.is-scrolled';
$breakpoint: medium;
$bar-scale-small: 0.5;
$bar-scale-medium: 0.8;
$header-height: 100px;
$header-offset-y: 20px;
$logo-small-scale: 0.8;
$logo-small-scale-scroll: 0.4;
$logo-medium-scale: 1.6;
$logo-medium-scale-scroll: 1.2;

#{ $base-selector } {
	height: t-rem($header-height);
	transition: transform map-get($s-transitions, header);
	width: 100%;
	will-change: transform;

	@include t-respond-to-min($breakpoint) {
		transform: translate(0, t-rem(40px));
	}

	.js & {	
		position: fixed;
		top: 0;
	}

	&::before {
		background: t-colour(tertiary);
		content: '';
		position: absolute;
		height: 100%;
		left: 0;
		top: 50%;
		transform: translate(0, -50%) scaleX(0) scaleY($bar-scale-small);
		transition: transform map-get($s-transitions, header);
		width: 100%;

		@include t-respond-to-min($breakpoint) {
			transform: translate(0, -50%) scaleX(0) scaleY($bar-scale-medium);
			transform-origin: left center;
		}
	}

	&#{ $scrolled-selector } {
		transform: translate(0, t-rem(-#{ ($header-height * $bar-scale-small) / 2 }));

		@include t-respond-to-min($breakpoint) {
			transform: translate(0, t-rem($header-offset-y));
		}

		&::before {
			transform: translate(0, -50%) scaleX(1) scaleY($bar-scale-small);
			
			@include t-respond-to-min($breakpoint) {
				transform: translate(0, -50%) scaleX(1) scaleY($bar-scale-medium);
			}
		}
	}

	+ * {
		
		.js & {
			margin-top: t-rem($header-height);
		}

		@include t-respond-to-min($breakpoint) {
			margin-top: t-rem(($header-height * ($logo-medium-scale - 1)) + $header-offset-y);

			.js & {
				margin-top: t-rem(($header-height * $logo-medium-scale) + $header-offset-y);
			}
		}

	}
}

#{ $base-selector }__inner {
	@include t-constraint;
	align-items: center;
	display: flex;
	justify-content: center;

	@include t-respond-to-min($breakpoint) {
		justify-content: space-between;
	}
}

#{ $base-selector }__logo {
	@include t-layer(2);
	transform: scale($logo-small-scale);
	transition: transform map-get($s-transitions, header);

	#{ $scrolled-selector } & {
		transform: scale($logo-small-scale-scroll);	
	}

	@include t-respond-to-min($breakpoint) {
		margin-left: t-rem(20px);
		transform: scale($logo-medium-scale);

		#{ $scrolled-selector } & {
			transform: scale($logo-medium-scale-scroll);			
		}
	}
}

#{ $base-selector }__nav {
	@include t-layer(1);
	align-items: center;
	background-color: t-colour(tertiary);
	display: flex;
	position: fixed;
	height: calc(100vh + #{ t-rem($header-height * $bar-scale-small) });
	justify-content: center;
	left: 0;
	top: 0;
	transform: translate(0, -100%);
	transition: transform map-get($s-transitions, header);
	width: 100%;

	&.is-active {
		transform: translate(0, 0);
	}

	@include t-respond-to-min($breakpoint) {
		background-color: transparent;
		display: block;
		height: auto;
		padding-top: 0;
		position: static;
		transform: none!important;
		transition: none;
		width: auto;
		
		#{ $docked-selector } & {

			.c-main-nav__list-item__link {
				color: t-colour(tertiary);

				&.is-active {
					border-color: t-colour(tertiary);
				}
			}
		}
	}
}

#{ $base-selector }__toggle {
	@include t-layer(2);
	position: absolute;
	right: 0;
	top: 50%;
	transform: translate(0, -50%);

	@include t-respond-to-min($breakpoint) {
		display: none;
	}
}