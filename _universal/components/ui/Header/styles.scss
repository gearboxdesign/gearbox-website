@import 'settings/settings-layout';
@import 'settings/settings-selectors';
@import 'settings/settings-transitions';
@import 'tools/tools-colours';
@import 'tools/tools-helpers';
@import 'tools/tools-layout';
@import 'tools/tools-media';

/* Component - Header
----------------------------------------- */

$base-selector: '.c-header';
$bar-scale-small: 0.5;
$bar-scale-medium: 0.8;

#{ $base-selector } {
	height: t-rem($s-header-height);
	transition: transform map-get($s-transitions, header);
	width: 100%;
	will-change: transform;

	@include t-respond-to-min($s-header-breakpoint) {
		transform: translate(0, t-rem(40px));
	}

	.js & {
		@include t-layer(3);
		position: fixed;
		top: 0;
	}

	&::before {
		background: t-colour(tertiary);
		box-shadow: 0 t-rem(5px) 0 rgba(t-colour(quaternary), 0.25);
		content: '';
		height: 100%;
		left: 0;
		position: absolute;
		top: 50%;
		transform: translate(0, -50%) scaleX(0) scaleY($bar-scale-small);
		transition: transform map-get($s-transitions, header);
		width: 100%;

		@include t-respond-to-min($s-header-breakpoint) {
			transform: translate(0, -50%) scaleX(0) scaleY($bar-scale-medium);
			transform-origin: left center;
		}
	}

	&#{ $s-scrolled-selector } {
		transform: translate(0, t-rem(-#{ ($s-header-height * $bar-scale-small) / 2 }));

		@include t-respond-to-min($s-header-breakpoint) {
			transform: translate(0, t-rem($s-header-offset-y));
		}

		&::before {
			transform: translate(0, -50%) scaleX(1) scaleY($bar-scale-small);
			
			@include t-respond-to-min($s-header-breakpoint) {
				transform: translate(0, -50%) scaleX(1) scaleY($bar-scale-medium);
			}
		}
	}

	+ * {
		
		.js & {
			padding-top: t-rem($s-header-height);

			@include t-respond-to-min($s-header-breakpoint) {
				padding-top: t-rem(($s-header-height * $s-logo-medium-scale) + $s-header-offset-y);
			}
		}
	}
}

#{ $base-selector }__inner {
	@include t-constraint;
	align-items: center;
	display: flex;
	justify-content: center;

	@include t-respond-to-min($s-header-breakpoint) {
		justify-content: space-between;
	}
}

#{ $base-selector }__logo {
	@include t-layer(2);
	transform: scale($s-logo-small-scale);
	transition: transform map-get($s-transitions, header);

	#{ $s-scrolled-selector } & {
		transform: scale($s-logo-small-scale-scroll);
	}

	@include t-respond-to-min($s-header-breakpoint) {
		margin-left: t-rem($s-base-gutter);
		transform: scale($s-logo-medium-scale);

		#{ $s-scrolled-selector } & {
			transform: scale($s-logo-medium-scale-scroll);
		}
	}
}

// NOTE: Specific override required here to account for translation adjustment in scrolled state.
#{ $base-selector }__nav {
	height: calc(100vh + #{ t-rem($s-header-height * $bar-scale-small) });

	@include t-respond-to-min($s-header-breakpoint) {
		height: auto;
	}
}

#{ $base-selector }__toggle {
	@include t-layer(2);
	position: absolute;
	right: t-rem($s-base-gutter - 6px);
	top: 50%;
	transform: translate(0, -50%);

	@include t-respond-to-min($s-header-breakpoint) {
		display: none;
	}

	#{ $s-scrolled-selector } & {
		border-bottom-color: transparent;
	}
}